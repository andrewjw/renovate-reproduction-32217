# Note: 192.168.123.xxx is an example network, you must update all these to match your own.

version: '2.1'

services:
  rtl_433:
#    image: "hertzg/rtl_433:23.11"
    image: rtl_433_aw:latest
    container_name: rtl_433
    restart: always
    privileged: true
    command: "-F mqtt://mqtt:1883 -f 434.0M -f 868.5M -H 90 -M level"#-Y classic" # -s 1000k"
    volumes:
      - ./analysis:/root/analysis
  pihole:
    container_name: pihole
    image: pihole/pihole:2024.07.0
    restart: always
    hostname: pihole
    domainname: home.indiegigs.com             # <-- Update
    cap_add:
      - NET_ADMIN
    networks:
      docker_network:
        ipv4_address: 192.168.1.3   # <-- Update
        ipv6_address: 2a02:8010:653a:0:0:0:1:3
    dns:
      - 127.0.0.1
      - 8.8.8.8
    ports:
      - 443/tcp
      - 53/tcp
      - 53/udp
      - 67/udp
      - 80/tcp
    environment:
      ServerIP: 192.168.1.3         # <-- Update (match ipv4_address)
      ServerIPv6: 2a02:8010:653a:0:0:0:1:3
      VIRTUAL_HOST: pihole.home.indiegigs.com  # <-- Update (match hostname + domainname)
      WEBPASSWORD: ""                   # <-- Add password (if required)
    volumes:
      - ../pihole/resolv.conf:/etc/resolv.conf
      - ../pihole/data:/etc/pihole
  unifi:
     container_name: unifi-controller
     image: jacobalberty/unifi:v8.3.32
     restart: always
     hostname: unifi
     domainname: home.indiegigs.com             # <-- Update
#     cap_add:
#       - NET_ADMIN
#     networks:
#      docker_network:
#        ipv4_address: 192.168.1.4   #M-BM- <-- Update
#     dns:
#      - 127.0.0.1
#      - 8.8.8.8
     ports:
      - 6789:6789
      - 8080:8080
      - 8880:8880
      - 8443:8443
      - 3478:3478/udp
     volumes:
      - ./unifi:/unifi
     environment:
      TZ: "Europe/London"
  unpoller:
    container_name: unpoller
    restart: always
    image: golift/unifi-poller:v2.11.2
    ports:
      - 9130/tcp
    volumes:
      - ./unpoller/up.conf:/etc/unpoller/up.conf
  grafana:
    image: grafana/grafana:10.4.7
    container_name: grafana
    restart: always
    volumes:
      - ./grafana:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini
      - ./teslamate/grafana/dashboards:/teslamate
    environment:
      - GF_PATHS_PROVISIONING=/var/lib/grafana/provisioning
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      - GF_ANALYTICS_REPORTING_ENABLED=FALSE
      - DATABASE_PORT=5433
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_SECURITY_DISABLE_GRAVATAR=true
    ports:
      - 3000:3000
  prometheus:
    image: prom/prometheus:v2.54.0
    container_name: prometheus
    restart: always
    links:
      - node-exporter
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules.yml:/etc/prometheus/rules.yml
      - ./prometheus/data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=3650d"
      - "--web.enable-admin-api"
  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: alertmanager
    restart: always    
    ports:
      - 9093:9093
    volumes:
      - ./secrets/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
  node-exporter:
    privileged: true
    image: prom/node-exporter:v1.8.2
    container_name: node-exporter
    restart: always
    network_mode: host
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /volume1:/volume1:ro
    command:
      - "--log.level=debug"
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points"
      - "^/(rootfs/)?(dev|etc|host|proc|run|sys|volume1/@docker)($$|/)"
  glowprom:
    image: andrewjw/glowprom:0.8.0
    container_name: glowprom
    restart: always
    ports:
      - 9102:9100
    env_file:
      - ./secrets/glowprom
  foxessprom:
    image: andrewjw/foxessprom:0.4.2
    container_name: foxessprom
    restart: always
    ports:
      - 9104:9100
    env_file:
      - ./secrets/foxessprom
    command:
      - "--mqtt=mqtt"
#  mythtv:
#     image: instantlinux/mythtv-backend:29.1-fixes.201909121531.4c432df
#     hostname: mythtv
#     container_name: mythtv
#     restart: always
#     volumes:
#        - /volume1/mythtv:/mnt/nfs/mythtv2
#        - ./secrets/mythtv-db-password:/run/secrets/mythtv-db-password:ro
#     environment:
#        - DBNAME=mythconverg
#        - DBSERVER=mariadb
#     depends_on:
#        - mariadb
#     ports:
#        - 4001:80
#        - 2022:2022
#        - 6543:6543
#        - 6544:6544
#        - 6549:6549
#        - 6554:6554
#        - 6760:6760
  mariadb:
    image: mariadb:10.8.2-focal
    container_name: mariadb
    restart: always
    volumes:
       - ./mythtv.mariadb.cnf:/etc/mysql/conf.d/mythtv.mariadb.cnf
       - ./mariadb:/var/lib/mysql
    env_file:
       - ./secrets/mariadb
    ports:
       - 3306:3306
  teslamate:
    image: teslamate/teslamate:1.30.1
    container_name: teslamate
    restart: always
    environment:
      - DATABASE_HOST=database
      - MQTT_HOST=mqtt
      #- DISABLE_MQTT=true
    env_file:
      - ./secrets/teslamate
    volumes:
      - ./import:/opt/app/import
    cap_drop:
      - all
    ports:
      - 4000:4000
    depends_on:
      - database
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_LISTEN_PORT: 80
      PGADMIN_LISTEN_ADDRESS: 0.0.0.0
      MAX_LOGIN_ATTEMPTS: 0
    env_file:
      - ./secrets/pgadmin
    ports:
      - 4002:80
    volumes:
      - ./pgadmin:/var/lib/pgadmin
  teslamateagile:
    image: mattjeanes/teslamateagile:v1.15.0
    container_name: teslamateagile
    restart: always
    env_file:
      - ./secrets/teslamate
    environment:
      - DATABASE_HOST=database
      - TeslaMate__UpdateIntervalSeconds=600
      - TeslaMate__GeofenceId=68
      - TeslaMate__EnergyProvider=FixedPrice
      - FixedPrice__TimeZone=Europe/London # IANA (tz database) time zone code, used for below times
      - FixedPrice__Prices__0=00:30-05:30=0.085 # You can have as many as these as you need
      - FixedPrice__Prices__1=05:30-00:30=0.24393
    depends_on:
      - database
  database:
    image: postgres:13
    container_name: postgres
    restart: always
    env_file:
      - ./secrets/postgres
    volumes:
      - ./teslamate-db13:/var/lib/postgresql/data
    ports:
      - 5433:5432
  query_exporter:
    image: adonato/query-exporter:2.10.0
    container_name: query_exporter
#    restart: never
    ports:
      - 9560:9560
    volumes:
      - ./query_exporter/config.yml:/config/config.yaml
    environment:
      - PROMETHEUS_DISABLE_CREATED_SERIES=True
    env_file:
      - ./secrets/teslamate
  prom433:
    image: "andrewjw/prom433:2.6.3"
    container_name: prom433
    restart: always
    ports:
      - 9103:9100
#  folder_size:
#    image: "prometheus_folder_size_exporter:latest"
#    container_name: folder_size
#    restart: always
#    command: prometheus_folder_size_exporter -p 9974 -i /config.json -b 300
#    volumes:
#      - ./prometheus_folder_size_exporter/config.json:/config.json
#      - /volume1:/volume1:ro
#    ports:
#      - 9974:9974
  mqtt:
    container_name: mqtt
    image: eclipse-mosquitto:2
    restart: always
    command: mosquitto -c /mosquitto-no-auth.conf
    ports:
      - 1883:1883
    volumes:
      - ./mosquitto/conf:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
  mktxp:
    container_name: mktxp
    image: guenterbailey/mktxp:latest
    restart: always
    ports:
      - 49090:49090
    volumes:
      - ./mktxp:/root/mktxp
  blackbox:
    container_name: blackbox
    image: prom/blackbox-exporter:v0.25.0
    restart: always
    ports:
      - 9115:9115
    volumes:
      - ./blackbox:/config
    command: --config.file /config/blackbox.yml
#    networks:
#      docker_network:
#        ipv4_address: 192.168.1.4
#        ipv6_address: 2a02:8010:653a:0:0:0:1:4
  smartdisplay:
    container_name: smartdisplay
    image: smartdisplay_backend
    restart: always
    expose:
      - 6001
    command: "6001"
    network_mode: host
    env_file:
      - ./secrets/smartdisplay
  house_manager:
    container_name: house_manager
    image: house_manager:latest
    restart: always
    command: "--mqtt mqtt"
    ports:
      - 6060:6060
    env_file:
      - ./secrets/house_manager
networks:
  docker_network:
    enable_ipv6: true
    driver: macvlan
    driver_opts:
      parent: eth1
    ipam:
      config:
        - subnet: 192.168.1.0/24            # <-- Update
          gateway: 192.168.1.1              # <-- Update
          ip_range: 192.168.1.3/28        # <-- Update
        - subnet: 2a02:8010:653a:0:0:0:1:1/48
